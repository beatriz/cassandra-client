{"version":3,"sources":["webpack:///webpack/bootstrap d7c6245c244b469f0e8b","webpack:///./tests/reducers/cassandra_tests.ts","webpack:///./src/reducers/cassandra.ts","webpack:///./src/constants/index.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DgE;;AAExD,SAAqB,sBAAO;AAChC,OAA8B,+BAAO;AACrC,YAAO,MAAoB,kCAAU,WAAY;AAC3C,eAAI,IAAW,WAAQ,QAAO;AAC9B,eAAI,IAAc,cAAQ,QAAO;AACjC,eAAI,IAAiB,iBAAQ,QACrC;AACF;AAAE,G;;;;;;;;;;;;;;ACRK;;IAAoC;;;;AAQ3C,MAAkB;AACP,eAAO;AACJ,kBAAO;AACJ,qBAGX;AANsB;2BAMW,QAAe,cAAgB;AAC7D,YAAO,OAAQ;AACtB,aAAU,MAAmB;AACrB,qCACI,SACC,WAAM,MACH,cACb;AAEH,aAAU,MAAiB;AACnB,qCACI,SACC,WAAO,OACJ,cAAO,OACJ,iBAAQ,OACxB;AACH,aAAU,MAAQ;AACV,qCACI,SACC,WAAO,OACJ,cACb;AACH;AACQ,mBAEV;;AAAC,C;;;;;;;;;;;;ACxCM,MAAwB,kDAGzB;AAAC,MAAsB,8CAGvB;AAAC,MAAa,4BAAY,U","file":"cassandra_tests.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d7c6245c244b469f0e8b","import { ConnectionReducer } from '../../src/reducers/cassandra'\n\ndescribe('connection reducer', () => {\n  it('should handle initial state', () => {\n    let act = ConnectionReducer(undefined, undefined)\n    expect(act.connected).toEqual(false)\n    expect(act.isConnecting).toEqual(false)\n    expect(act.connectionError).toEqual('')\n  })\n})\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./tests/reducers/cassandra_tests.ts","import { Action } from '../actions/renderer'\nimport * as Types from '../constants/index'\n\nexport interface State {\n  connected: boolean\n  isConnecting: boolean\n  connectionError: string\n}\n\nconst initialState: State = {\n  connected: false,\n  isConnecting: false,\n  connectionError: ''\n}\n\nexport function ConnectionReducer(state = initialState, action: Action): State {\n  switch (action.type) {\n  case Types.CONNECTION_SUCCESS:\n    return {\n      ...state,\n      connected: true,\n      isConnecting: false\n    }\n\n  case Types.CONNECTION_ERROR:\n    return {\n      ...state,\n      connected: false,\n      isConnecting: false,\n      connectionError: action.error\n    }\n  case Types.CONNECT:\n    return {\n      ...state,\n      connected: false,\n      isConnecting: true\n    }\n  default:\n    return state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/reducers/cassandra.ts","export const CONNECTION_SUCCESS = 'CONNECTION_SUCCESS'\nexport type CONNECTION_SUCCESS = typeof CONNECTION_SUCCESS\n\nexport const CONNECTION_ERROR = 'CONNECTION_ERROR'\nexport type CONNECTION_ERROR = typeof CONNECTION_ERROR\n\nexport const CONNECT = 'CONNECT'\nexport type CONNECT = typeof CONNECT\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/constants/index.ts"],"sourceRoot":""}